#BEGIN s << "require 'erio'\n"
#BEGIN s << "\nclass Erio\n"
#BEGIN s << "\n  enter do |o|\n"
#//
if @in_begin
  @type_sot = false
  nil
end
#//
if sb in /^\.(\w+)/ and !@type_sot
  @type_sot=true
  bs + "content_type #{$1.inspect}\n"
end
#>>
@verbs = "GET|POST|DELETE|UPDATE|HEAD|PUT|CONNECT|OPTIONS|TRACE|PATH"
#//
case sb
when /^enter$/
  "enter do"
when /^enter : (\w+)$/
  'enter do |#{$1}|'
when /^(#{@verbs})$/
  "o.is o.verb(#{$1.downcase.inspect}) do"
when /^(#{@verbs}) (.*): (.+?)$/
  "o.is(o.verb(#{$1.downcase.inspect}), #{$2}) do |_, #{$3}|"
when /(#{@verbs})(.*)$/
  "o.is(o.verb(#{$1.downcase.inspect}), #{$2}) do"
when /^-$/; "o.is true do"
when /^- (.*?) : (.+?)$/
  "o.on #{$1} do |#{$2}|"
when /^=(.*?) : (.+?)$/
  "o.is #{$1} do |#{$2}|"
when /^- (.*?)$/
  "o.on #{$1} do"
when /^=(.*?)$/
  "o.is #{$1} do"
when /^(?:\+ +)?(\w+): (.*)/
  "o.res.headers[#{$1.downcase.tr('_','-').inspect}] = (#{$2})"
when /^< (.*)$/
  "o.send_file(#{$1})"
when /^(\d+)$/
  if !@is_begin
    "o.status #{$1}"
  end
when /^\+ (.*?)$/
  "o.echo(#{$1.gsub(/\$(\w+)/) { "\#{#{$1}}" } })"
when/^\+\+ (.*?)$/
  "o.echoln(#{$1})"
when /^\+md (.*)/
  "o.echoln o.markdown(\"#{$1}\")"
end&.prepend(bs)&.+("\n")
#//
if @parent in /^ *[-=]($| [^-=]+)/
  case sb
  when /^(['"].+)/
    "o.echoln o.markdown :#{$1.inspect}"
  when /^:([\w\/]+)\.md$/
    "o.echoln o.markdown :#{$1.inspect}"
  when /^:([\w\/]+)\.(\w+)$/
    "o.echoln o.#{$2} :#{$1.inspect}"
  end&.prepend(bs)&.+("\n")
end
#END ret = ret.lines.map { '    ' + _1 }.join
#END<<
unless $runned
  run Erio
  $mtime  = File.mtime('config.ru.edrb')
  $runned = true
  Thread.new do
    loop do
      if File.mtime('config.ru.edrb') != $mtime
        $mtime = File.mtime('config.ru.edrb')
        `ruby endless-ruby.rb #{__FILE__}.edrb > #{__FILE__}`
        load __FILE__
#> #
